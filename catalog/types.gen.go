// Package catalog provides primitives to interact the openapi HTTP API.
//
// Code generated by go-sdk-codegen DO NOT EDIT.
package catalog

// Error defines model for Error.
type Error struct {
	// An error code that identifies the type of error that occurred.
	Code string `json:"code"`

	// Additional details that can help the caller understand or fix the issue.
	Details *string `json:"details,omitempty"`

	// A message that describes the error condition.
	Message string `json:"message"`
}

// ErrorList defines model for ErrorList.
type ErrorList struct {
	Errors []Error `json:"errors"`
}

// ItemAsin defines model for ItemAsin.
type ItemAsin string

// ItemAttributes defines model for ItemAttributes.
type ItemAttributes map[string]interface{}

// ItemBrowseClassification defines model for ItemBrowseClassification.
type ItemBrowseClassification struct {
	// Identifier of the classification.
	ClassificationId string `json:"classificationId"`

	// Display name for the classification.
	DisplayName string `json:"displayName"`

	// Parent classification of the current classification.
	Parent *ItemBrowseClassification `json:"parent,omitempty"`
}

// ItemBrowseClassifications defines model for ItemBrowseClassifications.
type ItemBrowseClassifications []ItemBrowseClassificationsByMarketplace

// ItemBrowseClassificationsByMarketplace defines model for ItemBrowseClassificationsByMarketplace.
type ItemBrowseClassificationsByMarketplace struct {
	// Classifications (browse nodes) that are associated with the item in the Amazon catalog.
	Classifications *[]ItemBrowseClassification `json:"classifications,omitempty"`

	// Amazon marketplace identifier.
	MarketplaceId string `json:"marketplaceId"`
}

// ItemContributor defines model for ItemContributor.
type ItemContributor struct {
	// Role of an individual contributor in the creation of an item, such as author or actor.
	Role ItemContributorRole `json:"role"`

	// Name of the contributor, such as Jane Austen.
	Value string `json:"value"`
}

// ItemContributorRole defines model for ItemContributorRole.
type ItemContributorRole struct {
	// Display name of the role in the requested locale, such as Author or Actor.
	DisplayName *string `json:"displayName,omitempty"`

	// Role value for the Amazon catalog item, such as author or actor.
	Value string `json:"value"`
}

// Dimension defines model for Dimension.
type Dimension struct {
	// Unit of measurement for the dimension value.
	Unit *string `json:"unit,omitempty"`

	// Numeric value of the dimension.
	Value *float64 `json:"value,omitempty"`
}

// Dimensions defines model for Dimensions.
type Dimensions struct {
	// Height of an item or item package.
	Height *Dimension `json:"height,omitempty"`

	// Length of an item or item package.
	Length *Dimension `json:"length,omitempty"`

	// Weight of an item or item package.
	Weight *Dimension `json:"weight,omitempty"`

	// Width of an item or item package.
	Width *Dimension `json:"width,omitempty"`
}

// ItemDimensions defines model for ItemDimensions.
type ItemDimensions []ItemDimensionsByMarketplace

// ItemDimensionsByMarketplace defines model for ItemDimensionsByMarketplace.
type ItemDimensionsByMarketplace struct {
	// Dimensions of an Amazon catalog item.
	Item *Dimensions `json:"item,omitempty"`

	// Amazon marketplace identifier.
	MarketplaceId string `json:"marketplaceId"`

	// Dimensions of a package that contains an Amazon catalog item.
	Package *Dimensions `json:"package,omitempty"`
}

// ItemIdentifier defines model for ItemIdentifier.
type ItemIdentifier struct {
	// Identifier of the item.
	Identifier string `json:"identifier"`

	// Type of identifier, such as UPC, EAN, or ISBN.
	IdentifierType string `json:"identifierType"`
}

// ItemIdentifiers defines model for ItemIdentifiers.
type ItemIdentifiers []ItemIdentifiersByMarketplace

// ItemIdentifiersByMarketplace defines model for ItemIdentifiersByMarketplace.
type ItemIdentifiersByMarketplace struct {
	// Identifiers associated with the item in the Amazon catalog for the indicated marketplaceId.
	Identifiers []ItemIdentifier `json:"identifiers"`

	// Amazon marketplace identifier.
	MarketplaceId string `json:"marketplaceId"`
}

// ItemImage defines model for ItemImage.
type ItemImage struct {
	// Height of the image in pixels.
	Height int `json:"height"`

	// URL for the image.
	Link string `json:"link"`

	// Variant of the image, such as MAIN or PT01.
	Variant Variant `json:"variant"`

	// Width of the image in pixels.
	Width int `json:"width"`
}

// ItemImages defines model for ItemImages.
type ItemImages []ItemImagesByMarketplace

// ItemImagesByMarketplace defines model for ItemImagesByMarketplace.
type ItemImagesByMarketplace struct {
	// Images for an item in the Amazon catalog, grouped by marketplaceId.
	Images []ItemImage `json:"images"`

	// Amazon marketplace identifier.
	MarketplaceId string `json:"marketplaceId"`
}

// ItemProductTypes defines model for ItemProductTypes.
type ItemProductTypes []ItemProductTypeByMarketplace

// ItemProductTypeByMarketplace defines model for ItemProductTypeByMarketplace.
type ItemProductTypeByMarketplace struct {
	// Amazon marketplace identifier.
	MarketplaceId *string `json:"marketplaceId,omitempty"`

	// Name of the product type that is associated with the Amazon catalog item.
	ProductType *string `json:"productType,omitempty"`
}

// ItemRelationship defines model for ItemRelationship.
type ItemRelationship struct {
	// ASINs of the related items that are children of this item.
	ChildAsins *[]string `json:"childAsins,omitempty"`

	// ASINs of the related items that are parents of this item.
	ParentAsins *[]string `json:"parentAsins,omitempty"`

	// Type of relationship.
	Type Type `json:"type"`

	// For VARIATION relationships, the variation theme indicates the combination of Amazon catalog item attributes that define the variation family.
	VariationTheme *ItemVariationTheme `json:"variationTheme,omitempty"`
}

// ItemRelationships defines model for ItemRelationships.
type ItemRelationships []ItemRelationshipsByMarketplace

// ItemRelationshipsByMarketplace defines model for ItemRelationshipsByMarketplace.
type ItemRelationshipsByMarketplace struct {
	// Amazon marketplace identifier.
	MarketplaceId string `json:"marketplaceId"`

	// Relationships for the item.
	Relationships []ItemRelationship `json:"relationships"`
}

// ItemVariationTheme defines model for ItemVariationTheme.
type ItemVariationTheme struct {
	// Names of the Amazon catalog item attributes that are associated with the variation theme.
	Attributes *[]string `json:"attributes,omitempty"`

	// Variation theme that indicates the combination of Amazon catalog item attributes that define the variation family.
	Theme *string `json:"theme,omitempty"`
}

// ItemClassificationSalesRank defines model for ItemClassificationSalesRank.
type ItemClassificationSalesRank struct {
	// Identifier of the classification that is associated with the sales rank.
	ClassificationId string `json:"classificationId"`

	// Corresponding Amazon retail website URL for the sales category.
	Link *string `json:"link,omitempty"`

	// Sales rank.
	Rank int `json:"rank"`

	// Name of the sales rank.
	Title string `json:"title"`
}

// ItemDisplayGroupSalesRank defines model for ItemDisplayGroupSalesRank.
type ItemDisplayGroupSalesRank struct {
	// Corresponding Amazon retail website URL for the sales rank.
	Link *string `json:"link,omitempty"`

	// Sales rank.
	Rank int `json:"rank"`

	// Name of the sales rank.
	Title string `json:"title"`

	// Name of the website display group that is associated with the sales rank
	WebsiteDisplayGroup string `json:"websiteDisplayGroup"`
}

// ItemSalesRanks defines model for ItemSalesRanks.
type ItemSalesRanks []ItemSalesRanksByMarketplace

// ItemSalesRanksByMarketplace defines model for ItemSalesRanksByMarketplace.
type ItemSalesRanksByMarketplace struct {
	// Sales ranks of an Amazon catalog item for a marketplaceId, grouped by classification.
	ClassificationRanks *[]ItemClassificationSalesRank `json:"classificationRanks,omitempty"`

	// Sales ranks of an Amazon catalog item for a marketplaceId, grouped by website display group.
	DisplayGroupRanks *[]ItemDisplayGroupSalesRank `json:"displayGroupRanks,omitempty"`

	// Amazon marketplace identifier.
	MarketplaceId string `json:"marketplaceId"`
}

// ItemSummaries defines model for ItemSummaries.
type ItemSummaries []ItemSummaryByMarketplace

// ItemSummaryByMarketplace defines model for ItemSummaryByMarketplace.
type ItemSummaryByMarketplace struct {
	// When true, the Amazon catalog item is intended for an adult audience or is sexual in nature.
	AdultProduct *bool `json:"adultProduct,omitempty"`

	// When true, the Amazon catalog item is autographed.
	Autographed *bool `json:"autographed,omitempty"`

	// Name of the brand that is associated with the Amazon catalog item.
	Brand *string `json:"brand,omitempty"`

	// Classification (browse node) that is associated with the Amazon catalog item.
	BrowseClassification *ItemBrowseClassification `json:"browseClassification,omitempty"`

	// The color that is associated with the Amazon catalog item.
	Color *string `json:"color,omitempty"`

	// Individual contributors to the creation of the item, such as the authors or actors.
	Contributors *[]ItemContributor `json:"contributors,omitempty"`

	// Classification type that is associated with the Amazon catalog item.
	ItemClassification *ItemClassification `json:"itemClassification,omitempty"`

	// The name that is associated with the Amazon catalog item.
	ItemName *string `json:"itemName,omitempty"`

	// The name of the manufacturer that is associated with the Amazon catalog item.
	Manufacturer *string `json:"manufacturer,omitempty"`

	// Amazon marketplace identifier.
	MarketplaceId string `json:"marketplaceId"`

	// When true, the item is classified as memorabilia.
	Memorabilia *bool `json:"memorabilia,omitempty"`

	// The model number that is associated with the Amazon catalog item.
	ModelNumber *string `json:"modelNumber,omitempty"`

	// The quantity of the Amazon catalog item within one package.
	PackageQuantity *int `json:"packageQuantity,omitempty"`

	// The part number that is associated with the Amazon catalog item.
	PartNumber *string `json:"partNumber,omitempty"`

	// The earliest date on which the Amazon catalog item can be shipped to customers.
	ReleaseDate *string `json:"releaseDate,omitempty"`

	// The name of the size of the Amazon catalog item.
	Size *string `json:"size,omitempty"`

	// The name of the style that is associated with the Amazon catalog item.
	Style *string `json:"style,omitempty"`

	// When true, the Amazon catalog item is eligible for trade-in.
	TradeInEligible *bool `json:"tradeInEligible,omitempty"`

	// The identifier of the website display group that is associated with the Amazon catalog item.
	WebsiteDisplayGroup *string `json:"websiteDisplayGroup,omitempty"`

	// The display name of the website display group that is associated with the Amazon catalog item.
	WebsiteDisplayGroupName *string `json:"websiteDisplayGroupName,omitempty"`
}

// ItemVendorDetails defines model for ItemVendorDetails.
type ItemVendorDetails []ItemVendorDetailsByMarketplace

// ItemVendorDetailsByMarketplace defines model for ItemVendorDetailsByMarketplace.
type ItemVendorDetailsByMarketplace struct {
	// The brand code that is associated with an Amazon catalog item.
	BrandCode *string `json:"brandCode,omitempty"`

	// The manufacturer code that is associated with an Amazon catalog item.
	ManufacturerCode *string `json:"manufacturerCode,omitempty"`

	// The parent vendor code of the manufacturer code.
	ManufacturerCodeParent *string `json:"manufacturerCodeParent,omitempty"`

	// Amazon marketplace identifier.
	MarketplaceId string `json:"marketplaceId"`

	// The product category that is associated with an Amazon catalog item.
	ProductCategory *ItemVendorDetailsCategory `json:"productCategory,omitempty"`

	// The product group that is associated with an Amazon catalog item.
	ProductGroup *string `json:"productGroup,omitempty"`

	// The product subcategory that is associated with an Amazon catalog item.
	ProductSubcategory *ItemVendorDetailsCategory `json:"productSubcategory,omitempty"`

	// The replenishment category that is associated with an Amazon catalog item.
	ReplenishmentCategory *ReplenishmentCategory `json:"replenishmentCategory,omitempty"`
}

// ItemVendorDetailsCategory defines model for ItemVendorDetailsCategory.
type ItemVendorDetailsCategory struct {
	// The display name of the product category or subcategory.
	DisplayName *string `json:"displayName,omitempty"`

	// The code that identifies the product category or subcategory.
	Value *string `json:"value,omitempty"`
}

// Item defines model for Item.
type Item struct {
	// The unique identifier of an item in the Amazon catalog.
	Asin ItemAsin `json:"asin"`

	// A JSON object containing structured item attribute data that is keyed by attribute name.
	Attributes *ItemAttributes `json:"attributes,omitempty"`

	// An array of classifications (browse nodes) that is associated with the item in the Amazon catalog, grouped by marketplaceId.
	Classifications *ItemBrowseClassifications `json:"classifications,omitempty"`

	// An array of dimensions that are associated with the item in the Amazon catalog, grouped by marketplaceId.
	Dimensions *ItemDimensions `json:"dimensions,omitempty"`

	// Identifiers associated with the item in the Amazon catalog, such as UPC and EAN identifiers.
	Identifiers *ItemIdentifiers `json:"identifiers,omitempty"`

	// The images for an item in the Amazon catalog.
	Images *ItemImages `json:"images,omitempty"`

	// Product types that are associated with the Amazon catalog item.
	ProductTypes *ItemProductTypes `json:"productTypes,omitempty"`

	// Relationships grouped by marketplaceId for an Amazon catalog item (for example, variations).
	Relationships *ItemRelationships `json:"relationships,omitempty"`

	// Sales ranks of an Amazon catalog item.
	SalesRanks *ItemSalesRanks `json:"salesRanks,omitempty"`

	// Summaries of Amazon catalog items.
	Summaries *ItemSummaries `json:"summaries,omitempty"`

	// The vendor details that are associated with an Amazon catalog item. Vendor details are only available to vendors.
	VendorDetails *ItemVendorDetails `json:"vendorDetails,omitempty"`
}

// Pagination defines model for Pagination.
type Pagination struct {
	// A token that you can use to retrieve the next page.
	NextToken *string `json:"nextToken,omitempty"`

	// A token that you can use to retrieve the previous page.
	PreviousToken *string `json:"previousToken,omitempty"`
}

// BrandRefinement defines model for BrandRefinement.
type BrandRefinement struct {
	// The brand name that you can use to refine your search.
	BrandName string `json:"brandName"`

	// The estimated number of results that would be returned if you refine your search by the specified brandName.
	NumberOfResults int `json:"numberOfResults"`
}

// ClassificationRefinement defines model for ClassificationRefinement.
type ClassificationRefinement struct {
	// The identifier of the classification that you can use to refine your search.
	ClassificationId string `json:"classificationId"`

	// Display name for the classification.
	DisplayName string `json:"displayName"`

	// The estimated number of results that would be returned if you refine your search by the specified classificationId.
	NumberOfResults int `json:"numberOfResults"`
}

// Refinements defines model for Refinements.
type Refinements struct {
	// A list of brands you can use to refine your search.
	Brands []BrandRefinement `json:"brands"`

	// A list of classifications you can use to refine your search.
	Classifications []ClassificationRefinement `json:"classifications"`
}

// ItemSearchResults defines model for ItemSearchResults.
type ItemSearchResults struct {
	// A list of items from the Amazon catalog.
	Items []Item `json:"items"`

	// For searches that are based on identifiers, numberOfResults is the total number of Amazon catalog items found.
	// For searches that are based on keywords, numberOfResults is the estimated total number of Amazon catalog items that are matched by the search query.
	NumberOfResults int `json:"numberOfResults"`

	// The nextToken and previousToken values that are required to retrieve paginated results.
	Pagination Pagination `json:"pagination"`

	// Search refinements for searches that are based on keywords.
	Refinements Refinements `json:"refinements"`
}

// Variant defines model for Variant.
type Variant string

// List of Variant
const (
	VariantMAIN Variant = "MAIN"
	VariantPT01 Variant = "PT01"
	VariantPT02 Variant = "PT02"
	VariantPT03 Variant = "PT03"
	VariantPT04 Variant = "PT04"
	VariantPT05 Variant = "PT05"
	VariantPT06 Variant = "PT06"
	VariantPT07 Variant = "PT07"
	VariantPT08 Variant = "PT08"
	VariantSWCH Variant = "SWCH"
)

// IdentifiersType defines model for IdentifiersType.
type IdentifiersType string

// List of IdentifiersType
const (
	IdentifiersTypeASIN   IdentifiersType = "ASIN"
	IdentifiersTypeEAN    IdentifiersType = "EAN"
	IdentifiersTypeGTIN   IdentifiersType = "GTIN"
	IdentifiersTypeISBN   IdentifiersType = "ISBN"
	IdentifiersTypeJAN    IdentifiersType = "JAN"
	IdentifiersTypeMINSAN IdentifiersType = "MINSAN"
	IdentifiersTypeSKU    IdentifiersType = "SKU"
	IdentifiersTypeUPC    IdentifiersType = "UPC"
)

// ItemClassification defines model for ItemClassification.
type ItemClassification string

// List of ItemClassification
const (
	ItemClassificationBASEPRODUCT     ItemClassification = "BASE_PRODUCT"
	ItemClassificationOTHER           ItemClassification = "OTHER"
	ItemClassificationPRODUCTBUNDLE   ItemClassification = "PRODUCT_BUNDLE"
	ItemClassificationVARIATIONPARENT ItemClassification = "VARIATION_PARENT"
)

// Type defines model for Type.
type Type string

// List of Type
const (
	TypeVARIATION        Type = "VARIATION"
	TypePACKAGEHIERARCHY Type = "PACKAGE_HIERARCHY"
)

// ReplenishmentCategory defines model for ReplenishmentCategory.
type ReplenishmentCategory string

// List of ReplenishmentCategory
const (
	ReplenishmentCategoryALLOCATED              ReplenishmentCategory = "ALLOCATED"
	ReplenishmentCategoryBASICREPLENISHMENT     ReplenishmentCategory = "BASIC_REPLENISHMENT"
	ReplenishmentCategoryINSEASON               ReplenishmentCategory = "IN_SEASON"
	ReplenishmentCategoryLIMITEDREPLENISHMENT   ReplenishmentCategory = "LIMITED_REPLENISHMENT"
	ReplenishmentCategoryMANUFACTUREROUTOFSTOCK ReplenishmentCategory = "MANUFACTURER_OUT_OF_STOCK"
	ReplenishmentCategoryNEWPRODUCT             ReplenishmentCategory = "NEW_PRODUCT"
	ReplenishmentCategoryNONREPLENISHABLE       ReplenishmentCategory = "NON_REPLENISHABLE"
	ReplenishmentCategoryNONSTOCKUPABLE         ReplenishmentCategory = "NON_STOCKUPABLE"
	ReplenishmentCategoryOBSOLETE               ReplenishmentCategory = "OBSOLETE"
	ReplenishmentCategoryPLANNEDREPLENISHMENT   ReplenishmentCategory = "PLANNED_REPLENISHMENT"
)

// IncludedData defines model for IncludedData.
type IncludedData string

// List of IncludedData
const (
	IncludedDataAttributes      IncludedData = "attributes"
	IncludedDataClassifications IncludedData = "classifications"
	IncludedDataDimensions      IncludedData = "dimensions"
	IncludedDataIdentifiers     IncludedData = "identifiers"
	IncludedDataImages          IncludedData = "images"
	IncludedDataProductTypes    IncludedData = "productTypes"
	IncludedDataRelationships   IncludedData = "relationships"
	IncludedDataSalesRanks      IncludedData = "salesRanks"
	IncludedDataSummaries       IncludedData = "summaries"
	IncludedDataVendorDetails   IncludedData = "vendorDetails"
)

// SearchCatalogItemsParams defines parameters for SearchCatalogItems.
type SearchCatalogItemsParams struct {
	// A comma-delimited list of product identifiers that you can use to search the Amazon catalog.
	Identifiers *[]string `form:"identifiers,omitempty" json:"identifiers,omitempty"`

	// The type of product identifiers that you can use to search the Amazon catalog.
	IdentifiersType *IdentifiersType `form:"identifiersType,omitempty" json:"identifiersType,omitempty"`

	// A comma-delimited list of Amazon marketplace identifiers.
	MarketplaceIds []string `form:"marketplaceIds" json:"marketplaceIds"`

	// A comma-delimited list of datasets to include in the response.
	IncludedData *[]IncludedData `form:"includedData,omitempty" json:"includedData,omitempty"`

	// The locale for which you want to retrieve localized summaries.
	Locale *string `form:"locale,omitempty" json:"locale,omitempty"`

	// A selling partner identifier, such as a seller account or vendor code.
	SellerId *string `form:"sellerId,omitempty" json:"sellerId,omitempty"`

	// A comma-delimited list of keywords that you can use to search the Amazon catalog.
	Keywords *[]string `form:"keywords,omitempty" json:"keywords,omitempty"`

	// A comma-delimited list of brand names that you can use to limit the search in queries based on keywords.
	BrandNames *[]string `form:"brandNames,omitempty" json:"brandNames,omitempty"`

	// A comma-delimited list of classification identifiers that you can use to limit the search in queries based on keywords.
	ClassificationIds *[]string `form:"classificationIds,omitempty" json:"classificationIds,omitempty"`

	// The number of results to include on each page.
	PageSize *int `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// A token that you can use to fetch a specific page when there are multiple pages of results.
	PageToken *string `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// The language of the keywords that are included in queries based on keywords.
	KeywordsLocale *string `form:"keywordsLocale,omitempty" json:"keywordsLocale,omitempty"`
}

// GetCatalogItemParams defines parameters for GetCatalogItem.
type GetCatalogItemParams struct {
	// A comma-delimited list of Amazon marketplace identifiers.
	MarketplaceIds []string `form:"marketplaceIds" json:"marketplaceIds"`

	// A comma-delimited list of datasets to include in the response.
	IncludedData *[]IncludedData `form:"includedData,omitempty" json:"includedData,omitempty"`

	// The locale for which you want to retrieve localized summaries.
	Locale *string `form:"locale,omitempty" json:"locale,omitempty"`
}
